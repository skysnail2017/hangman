import random

WORDLIST_FILENAME = "words.txt"

def loadWords():
    """
    Returns a list of valid words. Words are strings of lowercase letters.
    
    Depending on the size of the word list, this function may
    take a while to finish.
    """
    print("Loading word list from file...")
    # inFile: file
    inFile = open(WORDLIST_FILENAME, 'r')
    # line: string
    line = inFile.readline()
    # wordlist: list of strings
    wordlist = line.split()
    print("  ", len(wordlist), "words loaded.")
    return wordlist

def chooseWord(wordlist):
    """
    wordlist (list): list of words (strings)

    Returns a word from wordlist at random
    """
    return random.choice(wordlist)


wordlist = loadWords()

def isWordGuessed(secretWord, lettersGuessed):
    '''
    secretWord: string, the word the user is guessing
    lettersGuessed: list, what letters have been guessed so far
    returns: boolean, True if all the letters of secretWord are in lettersGuessed;
      False otherwise
    '''
    n=0

    for i in secretWord:
        if not i in lettersGuessed:
            n=n+1
    if n !=0:
        return False
    else:
        return True


def getGuessedWord(secretWord, lettersGuessed):
    '''
    secretWord: string, the word the user is guessing
    lettersGuessed: list, what letters have been guessed so far
    returns: string, comprised of letters and underscores that represents
      what letters in secretWord have been guessed so far.
    '''
    result=''
    for i in secretWord:
        if i in lettersGuessed:
            result=result+i
        else:
            result=result+'_'

    return result



import string
def getAvailableLetters(lettersGuessed):
    '''
    lettersGuessed: list, what letters have been guessed so far
    returns: string, comprised of letters that represents what letters have not
      yet been guessed.
    '''
    new_lowercase=string.ascii_lowercase
    for i in lettersGuessed:
        if i in new_lowercase:
            remove_index=new_lowercase.index(i)
            new_lowercase=new_lowercase[0:remove_index]+new_lowercase[remove_index+1:]
    return new_lowercase
    
def displayrank(rank):
    n=1
    import rank
    if ranklist == {}:
        print('No rank, please start a new game.')
    else:
        for key in ranklist:
            print('Rank ',n,': ',key,' ',ranklist[key])
            n=n+1
def editRank(name,score):
    import rank
    l=len(ranklist.values())
    if name in ranklist:
        if ranklist[name]>score:
            ranklist[name]=score
    else:
        ranklist[name]=score
    
    
    
def hangman(secretWord):
    '''
    secretWord: string, the secret word to guess.

    Starts up an interactive game of Hangman.

    * At the start of the game, let the user know how many 
      letters the secretWord contains.

    * Ask the user to supply one guess (i.e. letter) per round.

    * The user should receive feedback immediately after each guess 
      about whether their guess appears in the computers word.

    * After each round, you should also display to the user the 
      partially guessed word so far, as well as letters that the 
      user has not yet guessed.

    Follows the other limitations detailed in the problem write-up.
    '''
    print('Welcome to the game, Hangman!')
    while True:
        secretWord = random.choice(wordlist)
        mistakesMade=0
        lettersGuessed=[]
        n=input('Enter R to see the rank, enter N to start a new game, enter E to end the game: ')
        if n == 'R':
            displayrank(rank)
        elif n == 'N':
            print ('I am thinking of a word that is' , len(random.choice(wordlist)) , 'letters long.')
            print('-------------')
            while getGuessedWord(secretWord, lettersGuessed) != secretWord and mistakesMade <8:
                 print('You have ', 8-mistakesMade, 'guesses left.')
                 print('Available letters: ',getAvailableLetters(lettersGuessed))
                 guess=input('Please guess a letter:')
                 guessInLowerCase = guess.lower()
                 if guessInLowerCase in lettersGuessed:
                    print("Oops! You've already guessed that letter: ", getGuessedWord(secretWord, lettersGuessed))
                    print('-----------') 
                    lettersGuessed.append(guessInLowerCase)
        
                 elif guessInLowerCase in secretWord:
                    lettersGuessed.append(guessInLowerCase)
                    print('Good guess: ',getGuessedWord(secretWord, lettersGuessed))
                    print('-----------') 
                 else:
                     lettersGuessed.append(guessInLowerCase)
                     print('Oops! That letter is not in my word:',getGuessedWord(secretWord, lettersGuessed))
                     print('-----------') 
                     mistakesMade = mistakesMade+1
            if  isWordGuessed(secretWord, lettersGuessed) and mistakesMade<8:
                print('Congratulations, you won!')
                name = input('Enter name: ')
                score=mistakesMade
                editRank(name,score)
            else:
                print('Sorry, you ran out of guesses. The word was ',secretWord,".")
        elif n == 'E':
            break
        else:
            print('Invalid text, please enter again!')



secretWord = chooseWord(wordlist).lower()
hangman(secretWord)
